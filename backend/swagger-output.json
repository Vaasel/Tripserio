{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API Documentation",
    "description": "API Documentation for User Routes"
  },
  "host": "https://tripserio-web-app.onrender.com",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "API for users in the system"
    },
    {
      "name": "Trips",
      "description": "API for trips in the system"
    },
    {
      "name": "Blog",
      "description": "API for blog posts in the system"
    },
    {
      "name": "Payment",
      "description": "API for payments in the system"
    }
  ],
  "schemes": ["http"],
  "paths": {
    "/user/resetPassword/{token}": {
      "put": {
        "tags": ["User"],
        "summary": "Reset Password",
        "description": "Reset user's password using a token",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Reset token"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string"
                },
                "cPassword": {
                  "type": "string"
                }
              },
              "required": ["password", "cPassword"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Invalid token or passwords do not match"
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": ["User"],
        "summary": "Logout User",
        "description": "Logout the current user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logout successful"
          },
          "500": {
            "description": "Something went wrong"
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "tags": ["User"],
        "summary": "Register User",
        "description": "Register a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "cpassword": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              },
              "required": ["email", "name", "password", "cpassword"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "All fields must be filled or passwords do not match"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["User"],
        "summary": "Login User",
        "description": "Login an existing user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              },
              "required": ["email", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Please fill all fields"
          },
          "404": {
            "description": "User does not exist"
          },
          "401": {
            "description": "Invalid email or password"
          }
        }
      }
    },
    "/user/forgotPassword": {
      "post": {
        "tags": ["User"],
        "summary": "Forgot Password",
        "description": "Send a reset password email",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                }
              },
              "required": ["email"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email sent successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error sending email"
          }
        }
      }
    },
    "/user/updatePassword": {
      "put": {
        "tags": ["User"],
        "summary": "Update Password",
        "description": "Update password for logged-in user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "cPassword": {
                  "type": "string"
                }
              },
              "required": ["oldPassword", "password", "cPassword"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password updated successfully"
          },
          "401": {
            "description": "Invalid old password or passwords do not match"
          }
        }
      }
    },
    "/user/deleteUser/{id}": {
      "delete": {
        "tags": ["User"],
        "summary": "Delete User",
        "description": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/user/me": {
      "get": {
        "tags": ["User"],
        "summary": "Get User Details",
        "description": "Get details of the logged-in user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User details retrieved successfully"
          },
          "500": {
            "description": "Error retrieving user details"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["User"],
        "summary": "Get All Users",
        "description": "Get details of all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "All users retrieved successfully"
          },
          "500": {
            "description": "Error retrieving users"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get Single User",
        "description": "Get details of a single user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/trips": {
      "get": {
        "summary": "Get All Trips",
        "description": "Retrieves a list of all trips.",
        "tags": ["Trips"],
        "responses": {
          "200": {
            "description": "A list of trips",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Trip"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trips/addtrip": {
      "post": {
        "summary": "Add a Trip",
        "description": "Adds a new trip.",
        "tags": ["Trips"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trip"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trip added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Trip added successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Required fields are missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Required fields are missing"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/blog/": {
      "get": {
        "tags": ["Blog"],
        "summary": "Get all blogs",
        "description": "Fetch all blog posts",
        "operationId": "getBlogs",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Blog"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/blog/addBlog": {
      "post": {
        "tags": ["Blog"],
        "summary": "Add a new blog",
        "description": "Create a new blog post",
        "operationId": "addBlog",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "data",
            "in": "formData",
            "description": "Blog data",
            "required": true,
            "type": "string"
          },
          {
            "name": "featured_image",
            "in": "formData",
            "description": "Featured image",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Blog created successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/blog/getBlog/{id}": {
      "get": {
        "tags": ["Blog"],
        "summary": "Get a single blog",
        "description": "Fetch a single blog post by ID",
        "operationId": "getBlog",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Blog ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Blog"
            }
          },
          "404": {
            "description": "Blog not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/blog/editBlog/{id}": {
      "put": {
        "tags": ["Blog"],
        "summary": "Edit a blog",
        "description": "Update a blog post",
        "operationId": "editBlog",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Blog ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "data",
            "in": "formData",
            "description": "Blog data",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_image",
            "in": "formData",
            "description": "Featured image",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Blog updated successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Blog not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/blog/deleteBlog/{id}": {
      "delete": {
        "tags": ["Blog"],
        "summary": "Delete a blog",
        "description": "Remove a blog post",
        "operationId": "deleteBlog",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Blog ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Blog deleted successfully"
          },
          "404": {
            "description": "Blog not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/payment/stripe": {
      "post": {
        "tags": ["Payment"],
        "summary": "Stripe payment",
        "description": "Process a payment using Stripe",
        "operationId": "stripePayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "payment",
            "in": "body",
            "description": "Payment details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StripePayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/payment/jazzcash": {
      "post": {
        "tags": ["Payment"],
        "summary": "JazzCash payment",
        "description": "Process a payment using JazzCash",
        "operationId": "jazzcashPayment",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "payment",
            "in": "body",
            "description": "Payment details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/JazzCashPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Payment successful"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/chat/setReceiver": {
      "post": {
        "summary": "Set Chat Receiver",
        "tags": ["Chat"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiverId": {
                    "type": "string"
                  }
                },
                "required": ["receiverId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Receiver set successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/chat/sendMessage": {
      "post": {
        "summary": "Send Message",
        "tags": ["Chat"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": ["message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Message sent successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/chat/prevChats": {
      "get": {
        "summary": "Get Previous Chats",
        "tags": ["Chat"],
        "responses": {
          "200": {
            "description": "Previous chats retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Trip": {
        "type": "object",
        "required": ["name", "startingDate", "endingDate", "duration", "price"],
        "properties": {
          "_id": {
            "type": "string",
            "example": "trip_id"
          },
          "name": {
            "type": "string",
            "example": "Trip Name"
          },
          "startingDate": {
            "type": "string",
            "format": "date",
            "example": "YYYY-MM-DD"
          },
          "endingDate": {
            "type": "string",
            "format": "date",
            "example": "YYYY-MM-DD"
          },
          "duration": {
            "type": "integer",
            "example": 5
          },
          "price": {
            "type": "number",
            "format": "float",
            "example": 1000
          }
        }
      },
      "Blog": {
        "type": "object",
        "required": ["data", "featured_image"],
        "properties": {
          "data": {
            "type": "string"
          },
          "featured_image": {
            "type": "string"
          }
        }
      }
    },
    "definitions":{
      "StripePayment": {
        "type": "object",
        "properties": {
          "stripeToken": {
            "type": "string",
            "description": "Stripe token for the payment"
          },
          "totalPrice": {
            "type": "number",
            "description": "Total price of the payment"
          },
          "paymentDesc": {
            "type": "string",
            "description": "Description of the payment"
          }
        },
        "required": ["stripeToken", "totalPrice", "paymentDesc"]
      },
      "JazzCashPayment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount to be paid"
          },
          "mobileNumber": {
            "type": "string",
            "description": "Mobile number of the payer"
          },
          "cnic": {
            "type": "string",
            "description": "CNIC of the payer"
          },
          "desc": {
            "type": "string",
            "description": "Description of the payment"
          }
        },
        "required": ["amount", "mobileNumber", "cnic", "desc"]
      }
    }
  }
}
